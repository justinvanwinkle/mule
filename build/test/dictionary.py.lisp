(CL:EVAL-WHEN (:compile-toplevel :load-toplevel :execute)(CL:UNLESS (CL:FIND-PACKAGE "dictionary.py")(make-package "dictionary.py")(CL:USE-PACKAGE "builtins")))
(proclaim '(optimize (space 0) (safety 0) (speed 3)))
(CL:DEFUN |foo| (  ) 
(CL:LET ((|d| (|dict|  )))
(|setitem| |d| 1 2)
(|setitem| |d| "hey" 3)
(|setitem| |d| 4.0 "yup")
(|muleassert| (|__eq__| (|getitem| |d| 1) 2) )
(|muleassert| (|__eq__| (|len| |d| ) 3) )
(|muleassert| (|__eq__| (|sorted| (|keys| |d| ) ) (|sorted| (|list| '(1 "hey" 4.0)) )) )
(|setitem| |d| 4.0 1)
(|setitem| |d| 4 2)
(|muleassert| (|__eq__| (|getitem| |d| 4.0) 2) )
(CL:SETF |d| (|dict|  ))
(CL:LOOP FOR |x| FROM 0 BELOW 100 BY 1 DO (|setitem| |d| |x| |x|))
(|muleassert| (|__eq__| (|len| |d| ) 100) )
(CL:LET ((|d2| (|dict|  )))
(CL:LOOP FOR |k| BEING THE ELEMENTS OF (|keys| |d| ) DO (|setitem| |d2| |k| (|getitem| |d| |k|)))
(|muleassert| (|__eq__| |d2| |d|) )
(CL:SETF |d| (|dict|  ))
(|setitem| |d| 1 2)
(|setitem| |d| 3 4)
(|setitem| |d| 2 2)
(CL:LET ((|l1| (|sorted| (|keys| |d| ) )))
(CL:LET ((|l2| (|sorted| (|keys| |d| ) )))
(|muleassert| (|__eq__| |l1| |l2|) )
(CL:LET ((|z| NIL))
(CL:HANDLER-CASE 
(CL:PROGN (CL:SETF |z| (|getitem| |d| "herp")))
 
(|KeyError| () (CL:SETF |z| 1)))
(|muleassert| (|__eq__| |z| 1) )))))))
(|foo|  )
(CL:LOOP FOR S BEING EACH PRESENT-SYMBOL IN CL:*PACKAGE*
   WHEN (OR (CL:FBOUNDP S) (CL:BOUNDP S) (CL:FIND-CLASS S NIL))
   DO (CL:EXPORT S))

